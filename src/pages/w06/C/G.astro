---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 6"
 dir="w06/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="G">
  <h1>Counting the Lines</h1>
 </Header><div>
  <details>
   <summary>Check Your Work Here</summary>
   <pre
    class="line-numbers language-cpp"><code>string longest_line;
string line;
int line_number&lbrace;0&rbrace;;
while (getline(in, line))
&lbrace;
    ++line_number;
    if (line.size() &gt; longest_line.size()) &lbrace; 
        longest_line = line; 
   &rbrace; 
    out &lt;&lt; "Line " &lt;&lt; line_number &lt;&lt; " has ..." &lt;&lt; endl;
&rbrace;
out &lt;&lt; "Longest line: " &lt;&lt; longest_line &lt;&lt; endl;</code></pre>
  </details>
  <p class="firstLine">To process and <b>count the lines</b>, you must:</p>
  <ol>
   <li>
    Create a variable to hold the line number <mark>before</mark>
    the <tt>while</tt> loop.
   </li>
   <li>Increment the variable every time a line is read</li>
   <li>Print Line &lt;line number&gt; at the end of the <tt>while</tt> loop</li>
  </ol>
  <p>
   Here's the pseudocode to do that with the new lines highlighted. Try it out
   and then check your work with the code I've supplied.
  </p>
  <pre
   class="pcode"><em class="t">longest line : string
line number &lt;- 0</em>
while getline line
    <em class="t">line number = line number + 1</em>
    if line size &gt; longest line size then
        longest line = line
    <em class="t">Print "Line &lt;line number&gt; has . . ."</em>
Print "Longest line: " longest line</pre>
 </div>
</Layout>
