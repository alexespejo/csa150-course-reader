---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 6"
 dir="w06/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="F">
  <h1>The Longest Line</h1>
 </Header><div>
  <details>
   <summary>Check Your Work</summary>
   <pre
    class="line-number language-cpp"><code>string line;
string longest_line;
while (getline(in, line))
&lbrace;
    if (line.size() {'>'} longest_line.size())
   &lbrace; 
        longest_line = line;
   &rbrace; 
&rbrace;
out &lt;&lt; "Longest line: " &lt;&lt; longest_line &lt;&lt; endl;</code></pre>
  </details>
  <p class="firstLine">
   To read line-by-line, use
   <tt>getline()</tt> and the <mark>data-loop pattern</mark>:
  </p>
  <pre
   class="language-cpp"><code>string line;
while (getline(in, line)) . . .</code></pre>
  <p>To find the longest line, you must:</p>
  <ol>
   <li>
    <strong>Create a variable</strong>to hold the longest line (before the loop)
   </li>
   <li>
    Compare the <strong>current line size to the longest line size</strong>
    (in the loop)
   </li>
   <li><strong>Print</strong> the longest line (after the loop)</li>
  </ol>
  <p>
   Here's the pseudocode for this part of the problem. Once you've turned it
   into C++, check your work with the code at the top of the page.
  </p>

  <pre
   class="pcode">longest line : string
while getline line
    if line size {'>'} longest line size then
        longest line = line
print the longest line</pre>
  <p>
   <mark>Note</mark>: make sure that you read from your input stream, and write
   to your output stream. You <mark>should not</mark> use <tt>cin</tt> or
   <tt>cout</tt> in this problem; use your parameters.
  </p>
 </div>
</Layout>
