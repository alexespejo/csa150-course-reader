---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import imageReplit4 from "../images/replit-4.png";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 6"
 dir="w06/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="A">
  <h1>Handling Errors</h1>
 </Header><div>
  <p class="firstLine">
   We finished the last lesson with a question: what <mark>should</mark> the <tt
    >stoi()</tt
   > and <tt>stod()</tt> functions do when given invalid input? The C++ 17 version,
   from the standard library, does one thing, while the version we wrote does something
   else entirely when given the invalid input "UB-40".
   <img
    src={imageReplit4}
    class="inlineCenter width-90"
    alt="Converting numbers in C++98 and in C++11."
   />
  </p>
  <p>
   To answer this question, first consider what
   <mark>should</mark> happen when you try to:
  </p>
  <ul>
   <li>Print the square root of <tt>-2</tt>?</li>
   <li>Open a file that doesn't exist? Read data from that file?</li>
   <li>Convert a string that doesn't contain a number to a number?</li>
  </ul>
  <p>
   Each of these is <mark>handled in a different</mark> way. None of them are syntax
   or linker errors. Instead, they are
   <mark>runtime errors</mark>. The compiler and linker produced an executable,
   but when it runs, an error occurs.
  </p>
  <p>Let's examine a few ways to <mark>handle</mark> such errors.</p>
 </div>
</Layout>
