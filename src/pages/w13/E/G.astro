---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 13"
 dir="w13/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="G">
  <h1>Final Classes</h1>
 </Header><div>
  <p class="firstLine">
   To prevent <tt>Imposter</tt> classes, when you design a base class, consider which
   functions you want to allow others to extend and which ones should be "set in
   stone". No one should ever change
   <tt>getName()</tt>, so you can <mark
    >seal it using
    <tt>final</tt></mark
   > like this:
  </p>
  <pre
   class="language-cpp"><code>class Person
&lbrace;
public:
    virtual std::string getName() const final;
&rbrace;;</code></pre>
  <p>
   When a member function is marked <tt>final</tt> then derived classes are <strong
    >prevented</strong
   > from overriding it and we would see an error message like this:
  </p>
  <div class="consoleDisplay">
   Person.cpp:33:12: error: virtual function 'virtual<br />
   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std::string Imposter::getName() const'<br
   />
   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string getName() const<br />
   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^<br />
   Person.cpp:21:8: error: overriding final function <br />
   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'virtual std::string Person::getName() const'<br
   />
   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;string Person::getName() const &lbrace; return
   name; &rbrace;<br />
   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;^
  </div>
  <p>
   Only <tt>virtual</tt> functions can be marked <tt>final</tt>, (which is
   really annoying). When designing a collection of classes, you normally <strong
    >won't want all of the classes to be extensible</strong
   >. To prevent others from extending your class, add <tt>final</tt> to the class
   header, just like you did for the method. If you make a class <tt>final</tt>,
   then there is no reason to make the methods
   <tt>final</tt> as well.
  </p>
 </div>
</Layout>
