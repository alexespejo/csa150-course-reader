---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 13"
 dir="w13/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="H">
  <h1>Stream Substitutability</h1>
 </Header><div>
  <p class="firstLine">
   Writing data to a file is almost as easy as printing it on the screen. Once
   an <tt>ofstream</tt> object is set up, you can use the <tt>&lt;&lt;</tt>
   operator with the file stream in the same way you can with the <tt>cout</tt> object:
  </p>
  <pre
   class="language-cpp"><code>int x = 42;
ofstream out("myfile.dat");
cout &lt;&lt; "x-&gt;" &lt;&lt; x &lt;&lt; endl;   // of course this works
out &lt;&lt; "x-&gt;" &lt;&lt; x &lt;&lt; endl;    // this works as well</code></pre>
  <p>
   Well, the question is, <mark>why does that work?</mark> To understand this, think
   back to the <tt>write</tt> function that you created for the <tt>Point</tt> structure:
   <pre
    class="language-cpp"><code>ostream&amp; write(ostream&amp; out, const Point&amp; p)
&lbrace;
    out &lt;&lt; "(" &lt;&lt; p.x &lt;&lt; ", " &lt;&lt; p.y &lt;&lt; ")";
    return out;
&rbrace;;</code></pre>
   <p>
    This works with <tt>cout</tt> and <tt>cerr</tt>, both of which are <tt
     >ostream</tt
    > objects.
   </p>
   <pre
    class="language-cpp"><code>Point p = &lbrace;4, 2&rbrace;;
write(cout, p) &lt;&lt; endl;
write(cerr, p) &lt;&lt; endl;</code></pre>
   <p>
    So, what do you have to do to adapt the function so that it works with <tt
     >ofstream</tt
    > objects and maybe even <tt>ostringstream</tt> objects? The answer, perhaps
    surprisingly, is that
    <mark>you do not have to do anything</mark>; it already works with <tt
     >ofstream</tt
    >
    objects just as it does with <tt>ostream</tt> objects like
    <tt>cout</tt>, <mark
     >because every <tt>ofstream</tt>
     object IS-A <tt>ostream</tt> object</mark
    > through the
    <b>principle of substitutability</b>.
   </p>
  </p>
 </div>
</Layout>
