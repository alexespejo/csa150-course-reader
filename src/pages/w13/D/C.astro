---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import imageStreams from "../images/streams.png";
import imageMi from "../images/mi.png";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 13"
 dir="w13/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="C">
  <h1>Multiple Inheritance</h1>
 </Header><div>
  <p class="firstLine">
   C++ includes a capability known as <mark>multiple inheritance</mark>, which
   allows a class to be derived from two (or more) base classes. Multiple
   inheritance lets you create a class <tt>AmphibiousVehicle</tt>
   from the parents <tt>LandVehicle</tt> and <tt>WaterVehicle</tt>.
   <img
    src={imageMi}
    class="inlineCenter width-60"
    alt="An amphibious vehicle."
   />
  </p>
  <p>
   An <tt>AmphibiousVehicle</tt> inherits wheels or treads from its
   <tt>LandVehicle</tt> parent, and a prop or screw and rudder from its <tt
    >WaterVehicle</tt
   >
   parent. You can't do this in Java, because Java classes can have only one parent
   class.
  </p>

  <p>
   The standard stream libraries include classes that are
   <strong>both</strong> input and output streams. The <tt>fstream</tt> class at
   the bottom is an <tt>iostream</tt>, which is in turn—if you follow the arrow
   leading up and to the left—an <tt>istream</tt>.
  </p>
  <p>
   The <tt>fstream</tt> class therefore inherits all the member functions that pertain
   to
   <tt>istream</tt> objects. If you instead follow the arrow up and to the right,
   you discover that the
   <tt>fstream</tt> class is an <tt>ostream</tt>, which means that it inherits
   these member functions as well.
   <img
    src={imageStreams}
    class="inlineCenter width-60"
    alt="The streams hierarchy."
   />
  </p>
 </div>
</Layout>
