---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import imageStepbyStep from "../images/code-step-by-step.png";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 5"
 dir="w05/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="C">
  <h1>Try It Out</h1>
 </Header><div>
  <p class="firstLine">
   On the Canvas course home page, you’ll find a link to
   <strong>Code Step-by-Step</strong>, a Web site providing practice problems in
   several different programming languages, including C++. Go ahead and create
   your own account, and then let’s walk through a problem.
   <img
    src={imageStepbyStep}
    class="inlineCenter width-80 round shadow"
    alt="The Code Step-by-Step Website."
   />
  </p>
  <p>
   Click the C++ link as shown in the screenshot above, and then find the
   <mark>recursion</mark> section. Here are the instructions for the first problem,
   <tt>collapseSequences</tt>.
  </p>
  <div class="highlight alert alert-info">
   <p>
    Write a <mark>recursive function</mark> named <tt>collapseSequences</tt>
    that accepts a <tt>string</tt>
    <tt>s</tt> and <tt>char</tt>
    <tt>c</tt> as parameters and returns a new <tt>string</tt> that is the same as
    <tt>s</tt> but with any sequences of <strong>consecutive occurrences</strong
    > of <tt>c</tt> compressed into a single occurrence of <tt>c</tt>. For
    example, if you collapse sequences of character <tt>'a'</tt> in the <tt
     >string</tt
    >
    <tt>"aabaaccaaaaada"</tt>, you get <tt>"abaccada"</tt>.
   </p>
   <p>
    Your function is <strong>case-sensitive</strong>; if the character <tt>c</tt
    >
    is, for example, a lowercase <tt>'f</tt>', your function should not collapse
    sequences of uppercase <tt>'F'</tt> characters. In other words, you do not need
    to write code to handle case issues in this problem.
   </p>
  </div>
  <br />
  <p>
   The following table shows two examples and their expected return values:
  </p>
  <table class="options">
   <thead>
    <tr>
     <th>Call</th>
     <th>Returns</th>
    </tr>
   </thead>
   <tbody>
    <tr>
     <td>collapseSequences("aabaaccaaaaaada", 'a')</td>
     <td>"abaccada"</td>
    </tr>
    <tr>
     <td>collapseSequences("mississssipppi", 's')</td>
     <td>"misisipppi"</td>
    </tr>
   </tbody>
  </table>
 </div>
</Layout>
