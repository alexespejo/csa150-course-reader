---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import imageRunningMan from "../images/running-man.png";
import imageFork from "../images/fork.png";
import imageReplShell from "../images/repl-shell.png";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 5"
 dir="w05/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="B">
  <h1>The <em>cat</em> Filter</h1>
 </Header><div>
  <a href="https://replit.com/@stephengilbert/Filters?v=1" target="_blank">
   <img
    src={imageRunningMan}
    class="right dark:bg-white"
    alt="Decorative running-man icon."
   /></a
  >
  <p class="firstLine">
   Click the "running man" to <strong>open a Replit</strong> project which already
   contains a few files. Click the <strong>Fork Repl</strong> button to get your
   own copy, and then let's look at a few built-in Unix filters.
   <img src={imageFork} class="inlineCenter" alt="The Fork Replit Button." />
  </p>
  <p>
   Close the editor tab (which contains the <strong>Makefile</strong>) and then
   click the link for the Shell.
   <img
    src={imageReplShell}
    class="inlineCenter shadow round width-80"
    alt="The Replit shell."
   />
  </p>
  <p>
   Type the following command in the shell (terminal), and press <tt>ENTER</tt>.
  </p>
  <div class="consoleDisplay width-80">$ cat</div>
  <p>
   The cursor simply blinks; you <strong>don't</strong> get a new prompt. Go ahead
   and type a few lines of text, pressing <tt>ENTER</tt> at the end of each line.
   The <mark>input you typed is echoed</mark> on the next line. Press
   <tt>CTRL+D</tt> to return to the prompt.
  </p>
  <ul>
   <li>
    Filter programs <strong>read from standard input</strong> and <strong
     >write to standard output</strong
    >.
   </li>
   <li>
    The <tt>cat</tt> filter <strong>con<mark>cat</mark>enates</strong>
    each input character to standard output. In Windows, the equivalent filter is
    named <tt>type</tt>.
   </li>
   <li>
    The filter <mark>stops</mark> reading when it reaches
    <strong>end-of-file</strong>. In Unix, you simulate that by typing
    <tt>CTRL+D</tt> from the terminal. In Windows, it is <tt>CTRL+Z</tt>.
   </li>
  </ul>
  <p>
   A filter is <strong>not meant to be run interactively</strong>. Instead, it
   is meant <strong>process a stream of data</strong> that is supplied from a file,
   a network stream or some other source. The easiest way to supply such a stream
   is to use <strong>input redirection</strong>.
  </p>
 </div>
</Layout>
