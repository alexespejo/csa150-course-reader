---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 8"
 dir="w08/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="C">
  <h1>Common Algorithms</h1>
 </Header><div>
  <p class="firstLine">
   The real advantage a <tt>vector</tt>, as opposed to using individual discrete
   variables, is that it allows you to apply the <mark>same processing</mark> to
   <strong>all of the elements</strong> by using a loop. We can divide this processing
   into several kinds:
  </p>
  <ul>
   <li>
    Algorithms that <strong>need only read</strong>
    the values contained in the <tt>vector</tt>. These algorithms solve many
    counting and calculating problems.
   </li>
   <li>
    Algorithms that <strong>may modify</strong> the elements of the <tt
     >vector</tt
    > as it is processed. This includes initialization, sorting, and otherwise rearranging
    items.
   </li>
   <li>
    Algorithms where the
    <mark>position</mark> of the elements in the
    <tt>vector</tt> is significant or must be noted.
   </li>
   <li>
    Algorithms which need to process multiple <code>vector</code>s, using the
    same index, or algorithms which need to process only some of the elements.
   </li>
  </ul>
  <p>
   We'll use the <strong>range-based</strong>
   <tt class="i">for</tt>
   loop whenever possible. While you always <strong>can</strong> use the counter-controlled
   <tt class="i">for</tt> loop if you like, it's just more work.
  </p>
 </div>
</Layout>
