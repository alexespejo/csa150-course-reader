---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import imageSequential from "../images/sequential-if.png";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 2"
 dir="w02/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="F">Multi-way Branching</Header>
 <div>
  <h1>Multi-way Branching</h1>
  <p class="firstLine">
   Often, your <mark
    >programs will need to handle many different conditions</mark
   >: in one case, you should "turn left", in another you should "turn right",
   while in a third, it should go "straight ahead". When you <strong
    >have more than two branches</strong
   >, there are three general techniques to use:
  </p>
  <ul>
   <li>
    <mark>Sequential <tt>if</tt> statements</mark>
    should be used when each test depends on the results of a previous test. The
    tests are
    <strong>performed sequentially</strong>.
   </li>
   <li>
    <mark>Nested <tt>if</tt> statements</mark>
    are used when the calculations or actions you need to carry out depend on <strong
     >several different conditions</strong
    >, of different types.
   </li>
   <li>
    <mark><tt>switch</tt> statements</mark>
    allow you to easily write "menu style" code. You can place each action in a block
    (called a case<strong> block</strong>), and directly jump to (and execute)
    that block whenever the user enters the appropriate selection.
   </li>
  </ul>
  <p>
   One <strong>sequential comparison</strong> which you're all familiar with is the
   "letter grading scale" used to assign marks in school, (including in this course),
   similar to that shown here:
   <img
    src={imageSequential}
    class="inlineCenter"
    alt="A grading scheme from a learning-management system."
   />
  </p>
  <p>
   Typically, your letter grade is based on a percentage representing a <strong
    >weighted average</strong
   > for all of the work you've done during the term. To select one course of action
   from many possible alternatives (which is the case here), you employ <mark
    >sequential
    <tt>if</tt> statements</mark
   > following this pattern:
  </p>
  <pre
   class="language-cpp"><code>if (condition-1)        // condition-1 is true
  statement
else if (condition-2)   // condition-1 false, condition-2 true
  statement
...
else if (condition-n)   // conditions 1-n false, condition-n true
  statement
else                    // if no conditions are true
  statement</code></pre>
  <p>
   This is called the <strong>"Multiple Selection"</strong>
   pattern. It is also known as a "<strong>ladder style</strong>" if statement,
   because each of the conditions are formatted one under the other, like the
   rungs on a ladder.
  </p>
 </div>
</Layout>
