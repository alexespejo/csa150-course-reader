---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 2"
 dir="w02/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="F">Functions</Header>
 <div>
  <h1>Functions</h1>
  <p class="firstLine">
   A mathematical function such as
   <em>f(x) = x<sup>2</sup> + 1</em>, means that <em>ƒ(x)</em>
   computes a value equivalent to the square of <tt>x</tt>
   plus one. For any value <tt>x</tt>, you can compute the value of the function
   by applying the formula; thus <em>ƒ(3)</em> is <tt>3<sup>2</sup></tt>
   <tt>+</tt>
   <tt>1</tt>, or <tt>10</tt>.
  </p>
  <p>
   In C++ a <strong>function</strong> is a block of code that has been given a name.
   To run that code, you
   <mark>call the function</mark>. To call a function in C++, you write the name
   of the function, followed by a list of <mark>arguments</mark>
   in parentheses. Here is a call to the function named <tt class="i">f</tt>,
   passing the argument <tt>3</tt>:
  </p>
  <pre
   class="line-numbers language-cpp"><code>cout &lt;&lt; f(3) &lt;&lt; endl;</code></pre>
  <p>
   We can <mark>implement</mark> the function <em>f(x)</em> in C++ like this:
  </p>
  <pre
   class="line-numbers language-cpp"><code>double f(double x)
&lbrace;
  return x * x + 1;
&rbrace;</code></pre>
  <p>
   When called, the function copies the data supplied as arguments into the
   appropriate <mark>parameter variables</mark>
   (<tt>x</tt> in this example), and then executes the code in its body. When finished,
   control returns to the point in the code from which the call was made.
  </p>
  <p>
   The operation of going back to the calling program is called <mark
    >returning</mark
   > from the function. A function often passes a value back to its caller. This
   is called
   <mark>returning a value</mark>
  </p>
 </div>
</Layout>
