---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 10"
 dir="w10/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="G">
  <h1>The strncpy Function</h1>
 </Header><div>
  <p class="firstLine">
   The possibly safer <tt>strncpy()</tt>
   function copies only a specified number of characters from <tt>src</tt> to <tt
    >dest</tt
   >. Here's how it works:
  </p>
  <ul>
   <li>
    Call <tt>strncpy()</tt> with a <tt>dest</tt>, a <tt>src</tt>, and a <tt
     >count</tt
    > of characters.
   </li>
   <li>
    If the <tt>'\0'</tt> in <tt>src</tt> is found
    <strong>before</strong> the specified number of characters have been copied,
    then <tt>strncpy()</tt>
    will fill the remainder with <tt>'\0'</tt>.
   </li>
   <li>
    If the <tt>NUL</tt> character is not found in <tt>src</tt> before the number
    of characters have been copied, then <mark
     >you must manually append a terminating <tt>NUL</tt></mark
    >.
   </li>
  </ul>
  <p>
   Here is a <strong>semi-safe copy</strong>, given the previous example that
   avoids overflow (although it doesn't ensure that all of <tt>src</tt> was actually
   copied; for that you need a loop).
  </p>
  <pre
   class="language-cpp"><code>dest[kMaxLen - 1] = '\0';   // pre-terminate
strncpy(dest, src, kMaxLen - 1);</code></pre>
  <p>
   If I've seemed somewhat equivocal about using <tt>strncpy</tt>, you should
   know that it's widely regarded as a still unsafe function. If you want to
   know more, here are some links:
  </p>
  <ul>
   <li>
    <a
     target="_blank"
     href="https://randomascii.wordpress.com/2013/04/03/stop-using-strncpy-already/"
    >
     Stop Using strncpy already!</a
    >
   </li>
   <li>
    <a target="_blank" href="https://blog.liw.fi/posts/strncpy/">
     strncpy? Just say no</a
    >
   </li>
   <li>
    <a
     target="_blank"
     href="https://meyering.net/crusade-to-eliminate-strncpy/"
    >
     strncpy: Not the function you are looking for</a
    >
   </li>
  </ul>
 </div>
</Layout>
