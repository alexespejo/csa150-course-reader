---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 10"
 dir="w10/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="F">
  <h1>Find Last</h1>
 </Header><div>
  <p class="firstLine">
   You might think that the easiest thing would be to <strong
    >start at the back of the string</strong
   >
   and then loop towards the front. That's what you'd do with a C++ <tt
    >string</tt
   >. However, with C-strings, you can't find the length <strong
    >without first looking at every character</strong
   >, so looping backwards is actually more inefficient than simply going
   forward, saving the position each time the target is found.
  </p>
  <p>
   Here's an efficient <mark>array-notation</mark> implementation of the function:
  </p>
  <pre
   class="language-cpp"><code>int find_last(const char a[], char target)
&lbrace;
    int result = -1;
    for (int i = 0; a[i] != '\0'; ++i)
        if (a[i] == target)
            result = i;
    return result;
&rbrace;</code></pre>
 </div>
</Layout>
