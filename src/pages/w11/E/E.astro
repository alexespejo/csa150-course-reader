---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 11"
 dir="w11/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="E">
  <h1>The Implementation File</h1>
 </Header><div>
  <p class="firstLine">
   The header file <mark>defines the instance variables</mark> used to store the
   attributes or properties. The implementation file, which typically uses the structure
   name with a <tt>.cpp</tt> extension,
   <strong>provides a definition</strong> for each
   <mark>member function</mark> defined in the interface.
  </p>
  <p>Here's a starter for the implementation file:</p>
  <pre
   class="language-cpp"><code>#include "time.h"
#include &lt;iostream&gt;
using namespace std;</code></pre>
  <ol>
   <li>
    <tt>#include</tt> the header file with the class definition. If you don't, the
    compiler will flag all of the member functions as errors.
   </li>
   <li>
    Surround the header name in "double quotes" <tt>not</tt>
    &lt;angle brackets&gt;, which the preprocessor sees as instructions to look for
    standard library files.
   </li>
   <li>
    <tt>#include</tt> any standard libraries that the implementation uses. Here that
    is the <tt>&lt;iostream&gt;</tt> library, which is used for the <tt
     >read()</tt
    > and <tt>write()</tt>
    member functions.
   </li>
  </ol>
  <p>
   Because this is an implementation, not an interface file, you may include a <code
    class="language-cpp">using namespace std;</code
   >
   preprocessor directive.
  </p>
 </div>
</Layout>
