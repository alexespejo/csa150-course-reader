---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import imageSwitches from "../images/switches.png";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 11"
 dir="w11/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="C">
  <h1>Command Line Arguments</h1>
 </Header><div>
  <p class="firstLine">
   Instead of <mark>prompting for input</mark>
   inside your program, you can supply
   <strong>additional information</strong> on the command line. These additional
   strings are called <mark>command line arguments</mark>.
  </p>
  <p>
   Consider the <tt>make</tt> program. If you type this:
   <div class="consoleDisplay">$ make hello</div>
  </p>
  <p>
   the <tt>make</tt> program receives <tt>"hello"</tt> as a <strong
    >command line argument</strong
   >. It is up to the program to decide what to do with it; make attempts to
   build a target named <tt>hello</tt>.
  </p>
  <p>
   Strings starting with a hyphen (<tt>-</tt>) are customarily considered <strong
    >options</strong
   > (or <mark>switches</mark>) and other strings as Ô¨Åle names. In Windows, such
   switches often start with a forward slash. In Linux, when you type
   <tt>ls</tt>
   <tt>-la</tt> and press <tt>ENTER</tt>, you will get a similar display as if
   you typed
   <tt>dir</tt>
   <tt>/ON</tt>
   <tt>/X</tt> on Windows.
   <img
    src={imageSwitches}
    class="inlineCenter"
    alt="Using switches from the command line."
   />
  </p>
 </div>
</Layout>
