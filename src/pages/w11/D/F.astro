---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import imageProblem from "../images/problem.png";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 11"
 dir="w11/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="F">
  <h1>A Scenario</h1>
 </Header><div>
  <img src={imageProblem} class="right" alt="Peg & Cat" />
  <p class="firstLine">
   To give an idea of what
   <mark>could go wrong</mark>, suppose that you have a <strong
    >Radiation Therapy Machine</strong
   > like the
   <a target="_blank" href="https://en.wikipedia.org/wiki/Therac-25"
    >Therac-25</a
   >. If the software controlling the machine used a <tt>Time</tt>
   object to specify <mark>how long a therapy session should last</mark>, the
   machine would be <strong>intrinsically unsafe</strong>. Think about what will
   happen if you write the following code using the (non-buggy) <tt>run()</tt> function:
  </p>
  <pre
   class="language-cpp"><code>Time treatmentTime = &lbrace;0, -2&rbrace;;
run(treatmentTime);
. . .
void run(Time&amp; t)
&lbrace;
    auto elapsed = t.hours * 360 + t.minutes * 60;
    while (elapsed {'>'} 0)
   &lbrace; 
        pulseBeam();
        --elapsed;
   &rbrace; 
&rbrace;</code></pre>
  <p>
   As <a target="_blank" href="http://pbskids.org/peg/">Peg and Cat</a>
   point out, you now have a fairly serious problem. Even though the
   <tt>run()</tt> function is reasonable, it relies on the <tt>Time&amp;</tt>
   <tt>t</tt> parameter <mark>being correctly initialized</mark>. Because <tt
    >minutes</tt
   > was, (accidentally), set to a negative number, the loop will supply <mark
    >not</mark
   > two minutes of radiation, but <mark>billions of pulses</mark> instead.
  </p>
 </div>
</Layout>
