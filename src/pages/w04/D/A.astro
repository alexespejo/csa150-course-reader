---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 2"
 dir="w04/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="A">
  <h1>Data Flows</h1>
 </Header><div>
  <p class="firstLine">
   You may return more than one value from a function by using reference
   parameters to
   <mark>return values through the argument list</mark>.
  </p>
  <p>
   As an example, suppose that you are writing a program to solve the quadratic
   equation below and you want to structure that program into three IPO phases
   like this:
   <img
    src="../images/data-flows.png"
    class="inlineCenter width-90"
    alt="The three IPO phases to solve the quadratic equation."
   />
  </p>
  <p>
   Using this plan, your <tt>main</tt> function might look like this:
  </p>
  <pre
   class="language-cpp line-numbers"><code>int main()
&lbrace;
    double a, b, c, root1, root2;
    getCoefficients(a, b, c); 
    solveQuadratic(a, b, c, root1, root2);
    printRoots(root1, root2);
&rbrace;</code></pre>
  <p>Here's what's happening:</p>
  <ul>
   <li>
    In line 4, the variables <tt>a</tt>, <tt>b</tt> and <tt>c</tt>
    are <mark>output</mark> parameters. Instead of passing values
    <b>into</b> the function, we're supplying three <b>variables</b>
    which will be filled up in the funciton itself.
   </li>
   <li>
    In line 5, <tt>a</tt>, <tt>b</tt> and <tt>c</tt> are
    <mark>input</mark> parameters. We are supplying their values to the <tt
     >solveQuadratic</tt
    > function so that it can do its work.
   </li>
   <li>
    The variables <tt>root1</tt> and <tt>root2</tt> are
    <mark>output</mark> parameters on Line 5; they will be filled in inside the function.
    On line 6, they are <mark>input</mark>
    parameters.
   </li>
  </ul>
 </div>
</Layout>
