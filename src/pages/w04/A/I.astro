---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 2"
 dir="w04/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="I">
  <h1>The Make File</h1>
 </Header><div>
  <p class="firstLine">
   For the homework your instructor provides a project or <mark>make file</mark
   >. For this lesson, though, you'll get to build one on your own. Create a new
   file named
   <tt>makefile</tt>. It has no extension. Then, add the following code:
  </p>
  <pre
   class="line-numbers language-cpp"><code>EXE=digit-tester
OBJS=client.o digits.o

$(EXE): $(OBJS)
    $(CXX) $(CXXFLAGS) $(OBJS) -o $(EXE)
    
run: $(EXE)
    ./$(EXE)</code></pre>
  <p>Here are what these three sections mean:</p>
  <ol>
   <li>
    <mark>Macros</mark>: these are like variables that can be
    <strong>expanded</strong> later. <tt>EXE</tt> is the name of the executable,
    and <tt>OBJS</tt> contains the names of the object files. Since you have two
    <tt>.cpp</tt> files in your project, you'll have two object files.
   </li>
   <li>
    Both of the next two sections contain <mark>targets</mark>,
    <mark>dependencies</mark> and <mark>actions</mark>.
   </li>
   <ul style='list-style-type:"â†’"; margin-left:-1em;'>
    <li>
     Line 4 <strong>expands</strong> the macros <tt>EXE</tt>
     and <tt>OBJS</tt>, producing a line that says: <tt>digit-tester</tt>
     <tt>:</tt>
     <tt>client.o</tt>
     <tt>digits.o</tt>
    </li>
    <li>
     Interpret this line as meaning : "to build <tt>digit-tester</tt>, make sure
     that <tt>client.o</tt> and <tt>digits.o</tt>
     are both up to date."
    </li>
    <li>
     <tt>digit-tester</tt> is a <strong>target</strong> (what we are trying to build),
     while <tt>client.o</tt> and
     <tt>digits.o</tt> are <strong>dependencies</strong>
    </li>
    <li>
     Line 5 is the action to perform to produce
     <tt>digit-tester</tt>. Each action line must start with a
     <mark>tab character</mark>, not spaces. Your editor may do this already,
     but if not, you'll need to configure it. Line 5 expands a few other macros
     meaning "run the compiler with these object files and produce t his
     executable".
    </li>
   </ul>

   <li>
    Line 7 is called a <strong>pseudo target</strong>. When you type <tt
     >make</tt
    >
    <tt>run</tt>, the action line is executed. If you just type <tt>make</tt>,
    only the first target is built.
   </li>
  </ol>
  <p>
   Once you've saved your make file, type <tt>make</tt> and the linker errors should
   disappear. If they don't then go over the previous steps (or reach out on the
   Discussion Board). Type <tt>make</tt>
   <tt>run</tt>, and the client program should run (even if you have some
   warnings about unused parameters).
  </p>
  <p>
   Even though all of your tests fail, <mark>that's OK</mark>. The purpose of
   the stub is to get the mechanical details out of the way, so that you can <mark
    >use all of your brainpower</mark
   >
   to concentrate on solving the problems.
  </p>
 </div>
</Layout>
