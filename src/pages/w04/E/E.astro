---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import imageDilbert from "../images/dilbert.jpg";
import imageDiver from "../images/diver.png";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 2"
 dir="w04/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="E">
  <h1>A Hasty Loop</h1>
 </Header><div>
  <img src={imageDiver} class="right" alt="A decorative image of a diver." />
  <p class="firstLine">
   In addition to <tt class="i">for</tt> and
   <tt class="i">while</tt>, C++ has a loop that tests its condition
   <mark>after</mark> the loop body completes. The do-while loop always executes
   the statements inside its body at least once.
  </p>
  <pre
   class="language-cpp"><code>do
&lbrace;
    // statements
&rbrace;
while (condition);</code></pre>
  <p>
   The body of the <tt class="i">do-while</tt> loop appears between the keywords
   <tt>do</tt>
   (which precedes the loop body) and <tt>while</tt>. The body of the <tt
    class="i">do-while</tt
   >
   loop can be a single statement, ending with a semicolon, or it can be a compound
   statement enclosed in braces.
  </p>
  <p>
   In the <tt class="i">do-while</tt> loop, the condition is
   <mark>followed by a semicolon</mark>, unlike the
   <tt class="i">while</tt> loop, where following the condition with a semicolon
   leads to subtle, hard tofind bugs.
  </p>
  <p>
   The <tt class="i">do-while</tt> loop is often employed by beginning programmers
   because it seems more natural. If you find yourself in this situation, think twice.
   99% of the time, a <tt class="i">while</tt> loop or a <tt class="i">for</tt> loop
   is a better choice than a <tt class="i">do-while</tt>. In fact, except for
   salting your food...
   <img src={imageDilbert} class="inlineCenter" alt="A Dilbert comic strip." />
   which should <strong>always be done before tasting</strong>, there are
   relatively few other situations where a test-at-the-bottom strategy is
   superior to "looking before you leap."
  </p>
 </div>
</Layout>
