---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 2"
 dir="w04/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="D">
  <h1>The Conditional Operator</h1>
 </Header><div>
  <p class="firstLine">
   The <mark>conditional</mark>
   or <mark>selection</mark> operator uses two symbols:
   <tt>?</tt> and <tt>:</tt>, along with three different operands. It is also
   known as
   <mark>the ternary operator</mark> or <b>tertiary</b> operator for the number of
   operands. The general form is
  </p>
  <pre
   class="language-cpp"><code>(condition) ? true-result : false-result</code></pre>
  <p>
   The parentheses are not technically required, but programmers often include
   them to make things clearer. Here's how the conditional operator works:
  </p>
  <ol>
   <li>The condition is evaluated.</li>
   <li>
    If the condition is <tt>true</tt>, <tt class="i">true-result</tt>
    is evaluated and used as the expression's value.
   </li>
   <li>
    If the condition is <tt>false</tt>, then <tt class="i">false-result</tt>
    is used as the expression's.
   </li>
  </ol>
  <p>Here are two examples:</p>
  <pre
   class="line-numbers language-cpp"><code>int largest = (x &gt; y) ? x : y;
cout &lt;&lt; ((cats != 1) ? "cats" : "cat") &lt;&lt; endl;</code></pre>
  <ul>
   <li>
    <strong>Line 1</strong>
    assigns the larger of <tt>x</tt> or <tt>y</tt>
    to the variable <tt>largest</tt>, without the need for a multi-line <tt
     class="i">if</tt
    > statement.
   </li>
   <li>
    <b>Line 2</b> prints <tt>"cat"</tt> if there is only one cat, and <tt
     >"cats"</tt
    > otherwise.
   </li>
  </ul>
  <p>
   Note that when you use the conditional operator as part of an output
   statement, you <strong>must</strong> parenthesize the whole expression, since
   it has very low precedence.
  </p>
 </div>
</Layout>
