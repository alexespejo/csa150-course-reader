---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import imageDataTypes from "../images/data-types.png";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 2"
 dir="w02/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="B">Definitions &amp; Data Types</Header>
 <div>
  <p class="firstLine">
   A <b>definition</b> statement <b>allocates memory</b> for a variable's value.
   You will normally combine both declaration and defintion into a <mark
    >defining declaration</mark
   > like this:
  </p>
  <pre
   class="language-cpp"><code>int counter;        // counter is declared an defined
char letters[10];   // letters is an array of 10 chars
string verb;        // verb is declared and defined
Star rigel;         // Star is a user-defined type</code></pre>
  <p>
   Each name is associated with a particular <b>kind of data</b>
   (ints <mark>type</mark>), and the compiler <b>allocates space</b>
   in memory to hold a value for each one. A variable may be
   <b>defined</b>
   <mark>exactly once</mark> in a program, but may be <b>declared</b> any number
   of times.
  </p>
  <p>
   In your homework, you must <b>define</b> the <tt>STUDENT</tt> varible, the
   <tt>ASSIGNMENT</tt> is only <b>declared</b>, <mark>not</mark>
   <b>defined</b>. This means it must be defined elsewhere (in this case, in the
   procompiled <mark>library</mark> file <tt>libh01.a</tt>.)
  </p>
  <h2>Data Types</h2>
  <p>
   Variables in C++ are <mark>strongly</mark> typed.
   <strong>Strong typing</strong>
   means that each variable has a particular <strong>data type</strong>
   which does not change as the program runs. If you think of a variable as a box,
   you can think of a variable's data type as the <mark>kind</mark> of data which
   it can store. As an analogy, think of your local convenience store, where different
   product containers are specialized for a particular kind of beverage or snack.
   <img
    src={imageDataTypes}
    class="inlineCenter width-75"
    alt="Different fast-food containers."
   />
  </p>
  <p>
   In some languages, (such as Python), it is possible for the same variable to
   store a number at one point, and a string at another.
  </p>
  <p>
   C++ is also <mark>statically</mark> typed. <strong>Static typing</strong>
   means that variable <b>types</b> are <strong>explicitly specified</strong>
   in your source code, unlike Python or JavaScript where they are not.
  </p>
  <p>We categorize the C++ types as.</p>
  <ul>
   <li>
    <mark>Built-in value types</mark> are part of the language; also called <strong
     >fundamental</strong
    >, <strong>primitive</strong> types. In the previous section, <tt
     >counter</tt
    > is a built-in, primitive type
   </li>
   <li>
    <mark>Derived</mark>
    <strong> (or compound) types</strong>
    are part of the language, but are built upon one of the other types; this includes
    <strong>pointers</strong>, <strong>arrays</strong> and
    <strong>references</strong>. The array <code>letters</code> in example at the
    top of this page is a derived or compound type.
   </li>
   <li>
    <mark>Library types</mark>, such as <tt>string</tt> and
    <tt>vector</tt>, are class types supplied as part of the Standard C++
    library; they are not part of the C++ language. In the example from the
    previous section, <tt>verb</tt> is a
    <tt>string</tt>, one of the library types.
   </li>
   <li>
    <mark>User-defined types</mark> are designed and implemented by programmers.
    These are <strong>enumerated types</strong>,
    <strong>classes</strong> and <strong>structures</strong>. The variable <tt
     >rigel</tt
    > in the example is a variable of a user-defined type named <tt>Star</tt>.
   </li>
  </ul>
 </div>
</Layout>
