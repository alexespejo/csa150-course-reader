---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import imageTerminal from "../images/terminal.png";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 2"
 dir="w02/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="F">Console Output</Header>
 <div>
  <img
   src={imageTerminal}
   class="right"
   alt="A decorative old-fashioned terminal."
  />
  <h1></h1>
  <p class="firstLine">
   C++ uses an <mark>object-oriented library</mark> named <tt
    >&lt;iostream&gt;</tt
   > for input and output. The C++ standard library contains several predefined
   <strong>stream objects</strong>. Here are two:
  </p>
  <ul>
   <li>
    <tt>cout</tt>: <mark>standard output</mark>; similar to
    <tt>System.out</tt> in Java or <tt>stdout</tt> in Python.
   </li>
   <li>
    <tt>cin</tt>: <mark>standard input</mark>; similar to a <tt>Scanner</tt> object
    in Java or <tt>stdin</tt> in Python.
   </li>
  </ul>
  <p>To use these objects, include these headers:</p>
  <pre
   class="language-cpp"><code>#include &lt;iostream&gt;   // standard stream objects
#include &lt;iomanip&gt;    // "<em>manipulators"</em> for output formatting</code></pre>
  <p>
   The<strong> manipulators</strong> in <tt>&lt;iomanip&gt;</tt> control the formatting
   of real numbers.
  </p>
  <p>
   <mark>Streams</mark> can be thought of as <strong
    >data flowing sequentially from</strong
   > a source that produces it, and
   <strong>flowing to</strong> a destination, where it is displayed or saved. You
   <mark>insert</mark> a value into the stream and it eventually reaches its destination.
  </p>
  <p>
   The <strong>insertion</strong> (or output) <strong>operator</strong>
   is the symbol pair (<tt>&lt;&lt;</tt>) pointing <mark>to</mark>
   an <strong>output stream object.</strong> On the right of the operator are the
   values to insert into the stream.
  </p>
  <pre
   class="language-cpp"><code>cout &lt;&lt; "I am now " &lt;&lt; 73 &lt;&lt; " years old!" &lt;&lt; endl;</code></pre>
 </div>
 <ul>
  <li>
   The words <tt>"I am now"</tt> are called a <mark>string literal</mark>, text
   enclosed in double quotes.
  </li>
  <li>
   Numbers <strong>are not enclosed in quotes</strong>; <tt>cout</tt> has the ability
   to convert binary values into their textual form.
  </li>
  <li>
   To end output line, you can use the <strong>newline</strong> escape character
   (<tt>\n</tt>) or the <tt>endl</tt> (<i>end-el</i>)
   <strong>stream manipulator</strong> object as is done here.
  </li>
 </ul>
 <p>
  An output statement may <strong>insert several values</strong> into the stream,
  but each must have its own insertion operator.
 </p>
 <p>
  If you need to print special characters (like a double quote, or a backslash),
  then use the same sort of <strong>escape sequences</strong>
  that you employed in Java or Python:
 </p>
 <pre
  class="language-cpp"><code> cout &lt;&lt; "\"Hooray\", the crowd cheered!" &lt;&lt; endl;</code></pre>
</Layout>
