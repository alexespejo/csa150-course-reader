---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 2"
 dir="w02/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="E">Assignment</Header>
 <div>
  <p class="firstLine">
   The <mark>assignment operator</mark>
   <strong>copies the value on its right, and stores the copy</strong> inside the
   <mark>already</mark> existing variable on its left. Here are some examples:
  </p>
  <pre
   class="language-cpp line-numbers"><code>int sides = 7;   // initialization (not assignment)
. . .
sides = 10;       // non-range-checked assignment
sides = {3.5};    // range-checked assignment (<mark>error</mark>)</code></pre>
  <ul>
   <li>
    Line 1 is <strong>initialization</strong>; it <mark>may</mark> appear
    <strong>outside</strong>of a function.
   </li>
   <li>
    Lines 3 and 4 are <strong>assignment</strong>; they copy a value into an
    existing variable.
   </li>
   <li>
    All assignment statements <strong
     ><mark>must</mark>
     appear inside a function</strong
    >.
   </li>
   <li>
    <mark>List-assignment,</mark>
    with the value enclosed in braces, allows the compiler to perform additional
    range or type checking. Line 4 produces a compiler error because <tt>3.5</tt
    >
    cannot be converted to an <tt>int</tt> without loss of information.
   </li>
  </ul>
  <h2>Lvalues and Rvalues</h2>
  <p>
   An <tt class="i">lvalue</tt> is an object that has an address. Such objects can
   appear on the left-hand-side of an assignment operation. (The "el" stands for
   "left".) An
   <tt class="i">rvalue</tt> is any value which may appear on the right-hand-side
   of an assignment.
  </p>
  <ul>
   <li>
    A variable may be used as <mark>either</mark> an
    <tt class="i">lvalue</tt> or an <tt class="i">rvalue</tt>.
   </li>
   <li>
    Literals (such as the number <tt>10</tt>, or the string literal <tt
     >"hello"</tt
    >), as well as temporaries (such as the value produced by an expression,
    such as <tt>(3 + 4)</tt>) may only be <tt class="i">rvalues</tt>.
   </li>
   <li>
    Constants and arrays are called <mark>non-modifiable</mark>
    <tt class="i">lvalues</tt> since their names appear on the left side of the assignment
    operator when they are defined, but cannot be modified later.
   </li>
  </ul>
 </div>
</Layout>
