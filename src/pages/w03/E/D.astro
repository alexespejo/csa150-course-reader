---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import imageFlags from "../images/flag.png";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 2"
 dir="w03/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="D">The Flag-controlled Pattern</Header><div>
  <img
   src={imageFlags}
   class="right width-128"
   alt="Decorative image of checkered flag."
  />
  <h1>The Flag-controlled Pattern</h1>
  <p class="firstLine">
   A third way to implement the
   <strong>read-until-sentinel</strong> pattern is to use a <mark
    >flag-controlled</mark
   > loop, where you introduce an additional <em>Boolean</em>
   variable just before the loop starts and set it to <tt>false</tt>. Inside the
   loop you read a data value and check the sentinel, just as in the
   loop-and-a-half.
  </p>
  <p>
   Instead of a <tt>break</tt> statement, set your flag variable to <tt>true</tt
   > when the sentinel is read. Otherwise, you process that data value as normal:
  </p>
  <pre
   class="pcode">Set finished to false    // Boolean control flag
while not finished
    read the value
    if value is the sentinel then
        set finished to true
    else
        process the variable</pre>
  <p>
   As we've done with the other two methods, here is the same program
   implemented as a <mark>flag-controlled</mark> sentinel loop:
  </p>
  <pre
   class="language-cpp"><code>bool finished{false};       // control flag
while (! finished)
{'{'}
    cout &lt;&lt; "&gt; ";               // Prompt and read item
    cin {'>>'} value;
    if (value == 0) 
    {'{'}
        finished = true; 
    {'}'}
    else
   { '{'}
        total += value;
  {  '}'}
{'}'}</code></pre>
  <p>
   Which of these thre versions <mark>should</mark> you use? Eric Roberts, a professor
   at Stanford for many years,
   <a
    target="_blank"
    href="https://www-cs.stanford.edu/people/eroberts/papers/SIGCSE-1995/LoopExits.pdf"
   >
    suggests that empirical studies demonstrate</a
   > that students are more
   <mark
    >likely to write correct programs if they use the loop-and-a-half version
   </mark> than if they are forced to use some other strategy. If you're interested,
   follow the link to read Roberts' paper.
  </p>
 </div>
</Layout>
