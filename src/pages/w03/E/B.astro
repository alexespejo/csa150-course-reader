---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import imagePumps from "../images/pump.png";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 2"
 dir="w03/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="B">The Primed Loop Pattern</Header><div>
  <img
   src={imagePumps}
   class="right width-25"
   alt="Drinking from an old-fashioned water pump."
  />
  <h1>The Primed Loop Pattern</h1>
  <p>
   The <mark>primed-loop pattern</mark> is named after the old-west water pump which
   required users to pour water down the well to establish suction, before pumping
   began.
  </p>
  <p>Here's what that looks like in pseudocode:</p>
  <pre
   class="pcode">Prompt user and read in a value
While the value is not the sentinel
    Process the data value
    Prompt user and read next value</pre>
  <p>
   This is the <mark>classic way</mark> to process sentinel data. The code used to
   read each data value is <mark
    >duplicated, before the loop and at the end of the loop</mark
   >.
  </p>
  <p>
   Here's a <strong>primed-sentinel-loop</strong> that sums a sequence, using
   <tt>0</tt> as the sentinel:
  </p>
  <pre
   class="language-cpp"><code>cout &lt;&lt; "Add integers. Enter 0 when done." &lt;&lt; endl;

int total = 0, value = -1;
cout &lt;&lt; "&gt; ";
cin &gt;&gt; value;               // Read before the loop
while (value != 0)          // Check for the sentinel
&lbrace;
    total += value;         // No sentinel? Process
    cout &lt;&lt; "&gt; ";           // Prompt and read next item
    cin &gt;&gt; value;
&rbrace;
cout &lt;&lt; "Total: " &lt;&lt; total &lt;&lt; endl;</code></pre>
 </div>
</Layout>
