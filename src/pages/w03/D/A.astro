---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 2"
 dir="w03/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="A">
  <h1>How to Write Loops</h1>
 </Header><div>
  <p class="firstLine">
   Writing perfect code the first time is something of a "Holy Grail" among
   programmers. By that I mean that most programmers long to do it, but the vast
   majority consider its attainment to be the stuff of legend.
  </p>

  <p>
   Writing loops is one area where programming errors often crop up. Several
   years ago, however, I happened upon a technique developed by <b
    >Doug Cooper</b
   >, the Berkeley professor of "<i>Oh! Pascal</i>" fame, for building loops. I
   found that this technique <b>really does</b> increase your chances of building
   correct loops the first time, and it's worth the effort it takes to learn it.
  </p>
  <h2>Goal, Bounds &amp; Plan</h2>
  <p>
   The first step in building a successful loop is to be able to describe (and
   separate) the loop's <mark>bound</mark> from the loop's
   <mark>goal</mark>, and then come up with a <mark>plan</mark> for reaching your
   goal.
  </p>
  <p>
   The <strong>bound</strong> is the portion that makes it work "mechanically", while
   the <strong>goal</strong> of the loop is the work that you want to accomplish.
   The <strong>plan</strong> is the strategy you'll follow to both reach the bounds
   and, if possible, meet your goal.
  </p>
  <p>Here's an example problem that we can use to examine the difference:</p>
  <div class="highlight alert alert-info">
   <p>
    How many characters are in a sentence? Count the characters in a string
    until a period is encountered. If the string contains any characters, then
    it will contain a period. Count the period as well.
   </p>
  </div>
  <p>Using this problem statement, you'll find that</p>
  <ul>
   <li>
    the <strong>goal</strong> of the loop is to
    <mark>count the characters</mark> which precede a period.
   </li>
   <li>
    the <strong>bounds</strong> of the loop are "a period was encountered."
   </li>
   <li>
    the <strong>plan</strong> is to a) "read" a character, and b) increment a counter
   </li>
  </ul>
  <p>
   We can use the <strong>same</strong> bounds with a
   <mark> different</mark> goal:
  </p>
  <div class="highlight alert alert-info">
   <p>
    Print each character in a string until a period is encountered. Then, add an
    exclamation point and print a newline.
   </p>
  </div>
  <p>
   Notice that the <mark>bound is the same</mark>, but the
   <mark>goal is different</mark>. We're not counting, now we're printing. Our
   plan would change as well. Instead of adding one to a counter, in step b),
   we'd simply print the character, and, <strong>after</strong> the loop is finished,
   we'd print again.
  </p>
 </div>
</Layout>
