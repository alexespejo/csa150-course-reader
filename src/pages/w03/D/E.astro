---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import imageAdvance from "../images/advance.gif";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 2"
 dir="w03/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="E">
  <h1>Advancing the Loop</h1>
 </Header><div>
  <p class="firstLine">
   Now it's time to <mark>advance the loop</mark>, which means adding statements
   to the <strong>loop body</strong> that
   <mark>move closer to the bounds</mark> on each repetition. Let's see why. If you
   leave the body empty, what will happen?
  </p>
  <ol>
   <li>
    If <tt>str</tt> begins with a period the loop will not be entered. The program
    works and reports that there are no characters before the period.
   </li>
   <li>
    Otherwise, when the loop in entered, <strong>nothing</strong> in the body changes
    the value of <tt>letter</tt>, so there is <mark>no way out</mark>
    of the loop; it repeats over and over, <strong>endlessly</strong>.
    <mark>Endless (infinite) loops</mark> are common errors. Your IDE will appear
    as if it were "hung".
   </li>
   <li>
    To avoid endless loops, be sure the statements inside the loop body <strong
     >change something</strong
    > tested in the loop bounds. Here, just store the next character, like this:
   </li>
  </ol>
  <pre
   class="pcode">str &lt;- string supplied to the problem
pos &lt;- 0
letter &lt;- str.at(pos)
while letter is not a period
{<em>// Step 3: Advance the loop</em><i>pos &lt;- pos + 1
    letter &lt;- str.at(pos)</i>}</pre>

  <p>
   <strong>At this point, the mechanical portion of your loop</strong>—the part
   that makes it "work", so to speak—is finished. You should be able to compile
   your code (once you've "translated it" into C++, of course), and it should
   run correctly.
   <img
    src={imageAdvance}
    class="inlineCenter"
    alt="Minutemen advancing at Lexington in a reinactment."
   />
  </p>
 </div>
</Layout>
