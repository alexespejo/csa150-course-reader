---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 12"
 dir="w12/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="B">
  <h1>Conversion Constructors</h1>
 </Header><div>
  <p class="firstLine">
   A <b>conversion constructor</b>
   is a constructor (usually 1-argument) that
   <mark> implicitly converts between one type and another</mark>. Here's an
   overloaded conversion constructor that converts between fractional hours and
   hours and minutes:
  </p>
  <pre class="language-cpp"><code>Time(double hours);</code></pre>
  <p>
   The implementation of the constructor (converting first to seconds, then
   extracting the hours and minutes) could look like this:
  </p>
  <pre
   class="language-cpp"><code>Time::Time(double hours)
&lbrace;
    assert(hours &gt;= 0 &amp;&amp; hours &lt; 24);
    const int kSecondsPerHour = 3600;
    const int kHoursPerMinute = 60;
    auto time = static_cast&lt;int&gt;(hours * kSecondsPerHour);
    m_hours = time / kSecondsPerHour;
    m_minutes = time % kSecondsPerHour / kHoursPerMinute;
&rbrace;</code></pre>
 </div>
</Layout>
