---
import Layout from "../../../layouts/Layout.astro";
import Header from "../../../components/Header.astro";
import imageAbstraction from "../images/abstraction.png";
const { useLayout } = Astro.props;
---

<Layout
 title="Week 12"
 dir="w12/"
 displayLayout={useLayout}
 chapterSubSections={[]}
>
 <Header id="A">
  <h1>The Wall of Abstraction</h1>
 </Header><div>
  <p class="firstLine">
   <mark>A class is an interface paired with an implementation</mark>, similar
   to the
   <tt>Time</tt> structure
  </p>
  you created in the lesson on Information Hiding. This is called the <mark
   >wall of abstraction</mark
  >, illustrated by the comic below.
  <img
   src={imageAbstraction}
   class="inlineCenter"
   alt="Comic on the Wall of Abstraction."
  />
 </div>
 <p>
  The <strong>public interface</strong> specifies how clients interact with objects,
  and the <strong>private implementation</strong>
  specifies how the functions in the public interface are implemented.
 </p>
 <p>
  The <tt>Time</tt> struct (even when paired with an interface, so the data is hidden),
  still allows users to
  <mark>directly manipulate</mark>
  its data members. Classes take a different approach; with classes, the data inside
  your objects will
  <strong>only be accessible by the member functions</strong>,
  <mark>forcing</mark>
  the client to access and modify data in a safe way.
 </p>
</Layout>
